{"version":3,"sources":["./src/app/pages/mailbox/mailbox.module.ts","./src/app/pages/mailbox/mailbox.service.ts","./node_modules/ngx-quill/__ivy_ngcc__/fesm2015/ngx-quill.js","./src/app/pages/mailbox/mailbox.component.ts","./src/app/pages/mailbox/mailbox.component.html","./src/app/pages/mailbox/mailbox.component.scss","./src/app/pages/mailbox/mail.model.ts"],"names":[],"mappings":"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;AACA;AACA,2DAA2D,uDAAS;AACpE;AACA,0CAA0C,qHAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,mGAAmG,uBAAuB;AAC1H;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,sDAAsD,gCAAgC,sDAAe,sBAAsB;AAC3H,qBAAqB,wEAAkB,EAAE,2CAA2C,yBAAyB,8DAAQ,sBAAsB,EAAE,2CAA2C;AACxL;AACA,KAAK,gCAAgC,OAAO,oDAAM,+BAA+B;AACjF;AACA,4BAA4B,CAAC,+DAAwB;AACrD,cAAc,wDAAU;AACxB;AACA;AACA,aAAa;AACb,KAAK,gBAAgB,UAAU;AAC/B,sBAAsB,oDAAM;AAC5B;AACA,aAAa,GAAG,EAAE,EAAE,QAAQ,EAAE;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,0DAAY;AAC/C,mCAAmC,0DAAY;AAC/C,oCAAoC,0DAAY;AAChD,sCAAsC,0DAAY;AAClD,2BAA2B,0DAAY;AACvC,0BAA0B,0DAAY;AACtC,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,6DAAe;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,gBAAgB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,uDAAS;AACxB,gBAAgB,wEAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,yCAAyC,uBAAuB;AAChE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,6DAAe;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjmCAAmC,+DAAwB,CAAC,w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","file":"pages-mailbox-mailbox-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { QuillModule } from 'ngx-quill'\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { PipesModule } from '../../theme/pipes/pipes.module';\r\nimport { MailboxComponent } from './mailbox.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: MailboxComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    PerfectScrollbarModule,\r\n    QuillModule.forRoot(),\r\n    SharedModule,\r\n    PipesModule\r\n  ],\r\n  declarations: [\r\n    MailboxComponent\r\n  ]\r\n})\r\nexport class MailboxModule { }","import { Injectable } from '@angular/core'\r\nimport { Mail } from './mail.model';\r\n\r\nlet Mails = [\r\n    new Mail(\r\n        1, \r\n        'Envato Market', \r\n        'assets/img/app/envato.jpg',\r\n        'do-not-reply@market.envato.com', \r\n        'Your updated item has been approved',\r\n        '4:08 PM',\r\n        '<p>Congratulations! Your update to Azimuth - Angular 2 Admin Template on ThemeForest has been approved. '+\r\n        'You can view your item here: </p>'+\r\n        '<p><a href=\"http://themeforest.net/item/azimuth-angular-2-admin-template/19182105\" target=\"blank\">http://themeforest.net/item/azimuth-angular-2-admin-template/19182105</a></p>' +\r\n        '<p>Thanks for your submission!</p>' +\r\n        '<p>Regards,<br> Envato Market Team</p>', \r\n        false,\r\n        [],\r\n        true,\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        false \r\n    ),\r\n    new Mail(\r\n        2,\r\n        'Josiah Fromdahl',\r\n        'assets/img/profile/bruno.jpg',\r\n        'Reekie8647@gmail.com',\r\n        'Useful tool for those who are involved in SEO',\r\n        '9:47 AM',\r\n        '<p>Hi, I want to introduce the Website Reviewer is an incredibly useful tool for those who are involved in SEO and web designing. '+\r\n        'This particular tool will provide you with quick website review and SEO audit of the websites you’ve created so '+\r\n        'you will be able to determine if and where any changes should be made so you can make it as effective '+\r\n        'as possible when it comes to getting visitors and keeping them interested. '+\r\n        'Unlike many similar tools, website reviewer is completely free.</p>',\r\n        true,\r\n        ['assets/img/app/snow.jpg', 'assets/img/app/sample.jpg'],\r\n        true,\r\n        false,\r\n        true,\r\n        false,\r\n        false,\r\n        false \r\n    ),\r\n    new Mail(\r\n        3,\r\n        'Google Cloud Platform',\r\n        'assets/img/app/google-platform.png',\r\n        'CloudPlatform-noreply@google.com',\r\n        'Lessons from the field: surviving success with Customer Reliability Engineering',\r\n        'Jan 5',\r\n        '<h4>TRENDING</h4>'+\r\n        '<p>For those who missed the early adoption of Infrastructure as a Service circa 2007,' +\r\n        'this in-depth history stresses why businesses need to begin building around \"serverless\" architectures.</p>' +\r\n        '<p>A stress test led by Pivotal’s Cloud Foundry team ran 250,000 real-life app containers on Google Compute Engine. '+\r\n        'GCP made it possible to stand the environment up in hours, and scaled it without pre-planning.</p>' +\r\n        '<p>Dig in to a new site packed with open-source tools and resources that aims to make it easy for anyone to explore, develop, and share AI creations. '+\r\n        'Play an AI duet, or have your phone guess what you’re drawing.</p>',\r\n        false,\r\n        [],\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        false\r\n    ),\r\n    new Mail(\r\n        4,\r\n        'Microsoft Visual Studio',\r\n        'assets/img/app/vs.jpg',\r\n        'MVS@e-mail.microsoft.com',\r\n        'Welcome to Visual Studio Team Services',\r\n        '24.12.2016',\r\n        '<p>Whether your teams develop in Java, .NET, or in multiple languages, Visual Studio Team Services offers an open,' +\r\n        'cloud-hosted development hub. Use your favorite IDE, develop in any language, and empower your teams to iterate ' + \r\n        'rapidly.</p> <p>Rogue security software scams. Rogue security software, also known as \"scareware,\" is software that '+\r\n        'appears to be beneficial from a security perspective but provides limited or no security, generates erroneous or '+\r\n        'misleading alerts, or attempts to lure you into participating in fraudulent transactions. These scams can appear '+\r\n        'in email, online advertisements, your social networking site, search engine results, or even in pop-up windows on '+\r\n        'your computer that might appear to be part of your operating system, but are not.</p>',\r\n        false,\r\n        [],\r\n        true,\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        false\r\n    ),\r\n    new Mail(\r\n        5,\r\n        'Draft',\r\n        '',\r\n        '',\r\n        'no subject',\r\n        '4:46 PM',\r\n        '',\r\n        false,\r\n        [],\r\n        false,\r\n        false,\r\n        false,\r\n        true,\r\n        false,\r\n        false\r\n    ),\r\n    new Mail(\r\n        6,\r\n        'Draft',\r\n        '',\r\n        '',\r\n        'Please confirm your email',\r\n        'Jan 7',\r\n        'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut elementum interdum ex, sed aliquet nisl maximus imperdiet. Phasellus pharetra nunc eu dui hendrerit, quis ullamcorper tortor malesuada. Nullam ante mi, auctor eu nunc vitae, gravida molestie arcu.',\r\n        false,\r\n        [],\r\n        false,\r\n        false,\r\n        false,\r\n        true,\r\n        false,\r\n        false\r\n    ),\r\n    new Mail(\r\n        7,\r\n        'MailChimp',\r\n        'assets/img/app/mailchimp.jpg',\r\n        'hello@mailchimp.com',\r\n        'Our 2016 annual report',\r\n        '22.12.2016',\r\n        '<p>For our 2016 annual report, we let our design team run wild with our most fun facts and proudest moments from the year. From GIFs in email campaigns to physical tons of infrastructure added to dollars raised for charity, it’s our year in numbers.</p>' +\r\n        '<p>We’re proud of our new features, our customer support tickets solved, and our philanthropy in Atlanta. But we’re even more proud of you and the billions of emails you’ve sent to grow your businesses your way in 2016. Keep up the good work!</p>' +\r\n        '<p>Cheers to the new year,</p>' +\r\n        '<p>MailChimp</p>',\r\n        false,\r\n        [],\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        false\r\n    ),\r\n    new Mail(\r\n        8,\r\n        'Bluehost',\r\n        'assets/img/app/bluehost.jpg',\r\n        'no-reply@e.bluehost.com',\r\n        'Your domain privacy may be at risk',\r\n        '20.12.2016',\r\n        '<h4>New ICANN Rules Require Accurate Contact Information</h4>'+\r\n        '<p>Your domain information may be at risk. However, you can protect your information with domain privacy.</p>' +\r\n        '<p>Protect yourself with Domain Privacy.</p>'+\r\n        '<p><small>Only $11.88 per year.**</small></p>' +\r\n        '<p><a href=\"http://bluehost.com/\" target=\"blank\" class=\"btn btn-success\">Get started</a></p>',\r\n        false,\r\n        [],\r\n        false,\r\n        false,\r\n        true,\r\n        false,\r\n        false,\r\n        false\r\n    ),\r\n    new Mail(\r\n        9,\r\n        'Vimeo',\r\n        'assets/img/users/default-user.jpg',\r\n        'vimeo@email.vimeo.com',\r\n        'The year\\'s best videos and milestones',\r\n        '20.12.2016',\r\n        '<h4>Now presenting: 2016\\'s best videos</h4>'+\r\n        '<p>Every day, the world\\'s best creators upload their videos to Vimeo. And now, the most inventive, most striking, most all-around mind-blowing videos of 2016 are in. Enjoy, wondrous humans.</p>' +\r\n        '<p><a href=\"https://vimeo.com/blog/post/The-Top-Videos-of-2016?utm_source=email&utm_medium=vimeo-decembernewsletter-201612&utm_campaign=30389\" target=\"blank\" class=\"btn btn-info\">See the list</a></p>',\r\n        false,\r\n        [],\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        false\r\n    ),\r\n    new Mail(\r\n        10,\r\n        'Andy Dufresne',\r\n        'assets/img/profile/adam.jpg',\r\n        'andy.dufresne@gmail.com',\r\n        'The Shawshank Redemption',\r\n        '18.11.2016',\r\n        '<p>From Wikipedia, the free encyclopedia</p>' +\r\n        '<p>The Shawshank Redemption is a 1994 American drama film written and directed by Frank Darabont. and starring Tim Robbins and Morgan Freeman. Adapted from the Stephen King novella Rita Hayworth and Shawshank Redemption, the film tells the story of Andy Dufresne, '+\r\n        'a banker who is sentenced to life in Shawshank State Penitentiary for the murder of his wife and her lover, despite his claims of innocence. During his time at the prison, he befriends a fellow inmate, Ellis Boyd \"Red\" Redding, '+\r\n        'and finds himself protected by the guards after the warden begins using him in his money-laundering operation.</p>',\r\n        false,\r\n        [],\r\n        false,\r\n        true,\r\n        false,\r\n        false,\r\n        false,\r\n        false\r\n    ),\r\n    new Mail(\r\n        11,\r\n        'The Envato Team',\r\n        'assets/img/app/envato.jpg',\r\n        'donotreply@envato.com',\r\n        'Author Driven Pricing on ThemeForest, CodeCanyon and 3DOcean',\r\n        '05.09.2016',\r\n        '<h5>Hey Envato Community Members!</h5>' + \r\n        '<p>As many of you know, over the past 12 months we have been rolling out Author Driven Pricing (ADP) across a range of different categories on Envato Market. So far this has included GraphicRiver and a handful of categories within ThemeForest.</p>' +\r\n        '<p>In a few weeks, we\\'ll be moving on to the next stage of our Author Driven Pricing project. This will involve introducing ADP to three new areas of Envato Market. These areas are:</p>' +\r\n        '<ul><li>All remaining ThemeForest categories (including WordPress). </li><li>All categories on CodeCanyon.</li><li>All categories on 3DOcean</li></ul>' +\r\n        '<p>We strongly recommend reading the full announcement on our forums where you will find:</p>' +\r\n        '<ul><li>More details about the change.</li><li>How ADP has impacted pricing on previous categories.</li><li>Technical details regarding how to set prices.</li> <li>Why we’ve made the change. </li></ul>' +\r\n        '<p>You will also be able to ask any questions you might have.</p>' +\r\n        '<p>We will send you another email to let you know when this feature goes live.</p>' +\r\n        '<p>All the best,</p>'+\r\n        '<p>The Envato Team</p>',\r\n        false,\r\n        [],\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        false\r\n    ),\r\n    new Mail(\r\n        12,\r\n        'Jonathan Cantu',\r\n        'assets/img/avatars/avatar-3.png',\r\n        'JCantu@billingsleyco.com',\r\n        'Ability to Customize',\r\n        '02.09.2016',\r\n        '<p>Hi,</p><p>Upon purchases, will I have the ability to modify color palette, font, etc. beyond your own design?</p><p>Thanks</p>',\r\n        false,\r\n        [],\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        false\r\n    ),\r\n    new Mail(\r\n        13,\r\n        'Jennifer Adam',\r\n        'assets/img/profile/julia.jpg',\r\n        'jenniferadam2009@gmail.com',\r\n        'Guest Post Request - 2016 !!!',\r\n        '09.05.2016',\r\n        '<p><b>Hello,</b></p>'+\r\n        '<p>I\\'m Jennifer, constant follower of your blog posts and I\\'ve liked most of the blog posts written here. I could realize you\\'ve already published some great guest posts from different authors with distinct styles '+\r\n        'and I\\'d be privileged if I were provided with an opportunity to delight your blog followers with some informative blog posts.</p>' +\r\n        '<p>I\\'m a content expert and I\\'ve contributed some sensible and informative articles to surplus niche-specific blogs. I realize the value of content and its part in helping out numerous people out there in the space. </p>',\r\n        false,\r\n        [],\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        false,\r\n        false\r\n    )\r\n];\r\n  \r\n@Injectable()\r\nexport class MailboxService {\r\n\r\n    public getAllMails() {\r\n        return Mails.filter(mail => mail.sent == false && mail.draft == false && mail.trash == false);\r\n    }\r\n    \r\n    public getStarredMails() {\r\n        return Mails.filter(mail => mail.starred == true);\r\n    }\r\n\r\n    public getSentMails() {\r\n        return Mails.filter(mail => mail.sent == true);\r\n    }\r\n\r\n    public getDraftMails() {\r\n        return Mails.filter(mail => mail.draft == true);\r\n    }\r\n\r\n    public getTrashMails() {\r\n        return Mails.filter(mail => mail.trash == true);\r\n    }\r\n\r\n    public getMail(id: number | string) {\r\n        return Mails.find(mail => mail.id === +id);\r\n    }\r\n}","import { isPlatformServer, DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, ɵɵdefineInjectable, ɵɵinject, Injectable, Inject, EventEmitter, SecurityContext, Directive, ElementRef, PLATFORM_ID, Renderer2, NgZone, Input, Output, Component, ViewEncapsulation, forwardRef, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/platform-browser';\nimport * as ɵngcc2 from '@angular/common';\n\nconst _c0 = [[[\"\", \"quill-editor-toolbar\", \"\"]]];\nconst _c1 = [\"[quill-editor-toolbar]\"];\nconst defaultModules = {\n    toolbar: [\n        ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'],\n        [{ header: 1 }, { header: 2 }],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        [{ script: 'sub' }, { script: 'super' }],\n        [{ indent: '-1' }, { indent: '+1' }],\n        [{ direction: 'rtl' }],\n        [{ size: ['small', false, 'large', 'huge'] }],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [\n            { color: [] },\n            { background: [] }\n        ],\n        [{ font: [] }],\n        [{ align: [] }],\n        ['clean'],\n        ['link', 'image', 'video'] // link and image, video\n    ]\n};\n\nconst getFormat = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\n\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config');\n\nclass QuillService {\n    constructor(config) {\n        this.config = config;\n        this.count = 0;\n        if (!this.config) {\n            this.config = { modules: defaultModules };\n        }\n    }\n    getQuill() {\n        this.count++;\n        if (!this.Quill && this.count === 1) {\n            this.$importPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                const quillImport = yield import('quill');\n                this.Quill = (quillImport.default ? quillImport.default : quillImport);\n                // Only register custom options and modules once\n                (_a = this.config.customOptions) === null || _a === void 0 ? void 0 : _a.forEach((customOption) => {\n                    const newCustomOption = this.Quill.import(customOption.import);\n                    newCustomOption.whitelist = customOption.whitelist;\n                    this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n                });\n                (_b = this.config.customModules) === null || _b === void 0 ? void 0 : _b.forEach(({ implementation, path }) => {\n                    this.Quill.register(path, implementation, this.config.suppressGlobalRegisterWarning);\n                });\n                resolve(this.Quill);\n            }));\n        }\n        return this.$importPromise;\n    }\n}\nQuillService.ɵfac = function QuillService_Factory(t) { return new (t || QuillService)(ɵngcc0.ɵɵinject(QUILL_CONFIG_TOKEN)); };\nQuillService.ɵprov = ɵɵdefineInjectable({ factory: function QuillService_Factory() { return new QuillService(ɵɵinject(QUILL_CONFIG_TOKEN)); }, token: QuillService, providedIn: \"root\" });\nQuillService.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [QUILL_CONFIG_TOKEN,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [QUILL_CONFIG_TOKEN]\n            }] }]; }, null); })();\n\n// tslint:disable-next-line:directive-class-suffix\nclass QuillEditorBase {\n    constructor(elementRef, domSanitizer, doc, platformId, renderer, zone, service) {\n        this.elementRef = elementRef;\n        this.domSanitizer = domSanitizer;\n        this.doc = doc;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.required = false;\n        this.customToolbarPosition = 'top';\n        this.sanitize = false;\n        this.styles = null;\n        this.strict = true;\n        this.customOptions = [];\n        this.customModules = [];\n        this.preserveWhitespace = false;\n        this.trimOnValidation = false;\n        this.onEditorCreated = new EventEmitter();\n        this.onEditorChanged = new EventEmitter();\n        this.onContentChanged = new EventEmitter();\n        this.onSelectionChanged = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.disabled = false; // used to store initial value before ViewInit\n        this.valueGetter = (quillEditor, editorElement) => {\n            let html = editorElement.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = null;\n            }\n            let modelValue = html;\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'text') {\n                modelValue = quillEditor.getText();\n            }\n            else if (format === 'object') {\n                modelValue = quillEditor.getContents();\n            }\n            else if (format === 'json') {\n                try {\n                    modelValue = JSON.stringify(quillEditor.getContents());\n                }\n                catch (e) {\n                    modelValue = quillEditor.getText();\n                }\n            }\n            return modelValue;\n        };\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'html') {\n                if (this.sanitize) {\n                    value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                }\n                return quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    return [{ insert: value }];\n                }\n            }\n            return value;\n        };\n        this.selectionChangeHandler = (range, oldRange, source) => {\n            const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n            // only emit changes when there's any listener\n            if (!this.onBlur.observers.length &&\n                !this.onFocus.observers.length &&\n                !this.onSelectionChanged.observers.length &&\n                !shouldTriggerOnModelTouched) {\n                return;\n            }\n            this.zone.run(() => {\n                if (range === null) {\n                    this.onBlur.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                else if (oldRange === null) {\n                    this.onFocus.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                this.onSelectionChanged.emit({\n                    editor: this.quillEditor,\n                    oldRange,\n                    range,\n                    source\n                });\n                if (shouldTriggerOnModelTouched) {\n                    this.onModelTouched();\n                }\n            });\n        };\n        this.textChangeHandler = (delta, oldDelta, source) => {\n            // only emit changes emitted by user interactions\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = null;\n            }\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n            // only emit changes when there's any listener\n            if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n                return;\n            }\n            this.zone.run(() => {\n                if (shouldTriggerOnModelChange) {\n                    this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n                }\n                this.onContentChanged.emit({\n                    content,\n                    delta,\n                    editor: this.quillEditor,\n                    html,\n                    oldDelta,\n                    source,\n                    text\n                });\n            });\n        };\n        // tslint:disable-next-line:max-line-length\n        this.editorChangeHandler = (event, current, old, source) => {\n            // only emit changes when there's any listener\n            if (!this.onEditorChanged.observers.length) {\n                return;\n            }\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n                if (html === '<p><br></p>' || html === '<div><br></div>') {\n                    html = null;\n                }\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        content,\n                        delta: current,\n                        editor: this.quillEditor,\n                        event,\n                        html,\n                        oldDelta: old,\n                        source,\n                        text\n                    });\n                });\n            }\n            else {\n                this.onEditorChanged.emit({\n                    editor: this.quillEditor,\n                    event,\n                    oldRange: old,\n                    range: current,\n                    source\n                });\n            }\n        };\n    }\n    static normalizeClassNames(classes) {\n        const classList = classes.trim().split(' ');\n        return classList.reduce((prev, cur) => {\n            const trimmed = cur.trim();\n            if (trimmed) {\n                prev.push(trimmed);\n            }\n            return prev;\n        }, []);\n    }\n    ngAfterViewInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPlatformServer(this.platformId)) {\n                return;\n            }\n            const Quill = yield this.service.getQuill();\n            this.elementRef.nativeElement.insertAdjacentHTML(this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin', this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n            const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            if (toolbarElem) {\n                modules.toolbar = toolbarElem;\n            }\n            else if (modules.toolbar === undefined) {\n                modules.toolbar = defaultModules.toolbar;\n            }\n            let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n            if (placeholder === undefined) {\n                placeholder = 'Insert text here ...';\n            }\n            if (this.styles) {\n                Object.keys(this.styles).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n            if (this.classes) {\n                this.addClasses(this.classes);\n            }\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n            if (!bounds) {\n                bounds = this.service.config.bounds ? this.service.config.bounds : this.doc.body;\n            }\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let readOnly = this.readOnly;\n            if (!readOnly && this.readOnly !== false) {\n                readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n            }\n            let scrollingContainer = this.scrollingContainer;\n            if (!scrollingContainer && this.scrollingContainer !== null) {\n                scrollingContainer =\n                    this.service.config.scrollingContainer === null\n                        || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined);\n            }\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    bounds,\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    placeholder,\n                    readOnly,\n                    scrollingContainer: scrollingContainer,\n                    strict: this.strict,\n                    theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n                });\n            });\n            if (this.content) {\n                const format = getFormat(this.format, this.service.config.format);\n                if (format === 'object') {\n                    this.quillEditor.setContents(this.content, 'silent');\n                }\n                else if (format === 'text') {\n                    this.quillEditor.setText(this.content, 'silent');\n                }\n                else if (format === 'json') {\n                    try {\n                        this.quillEditor.setContents(JSON.parse(this.content), 'silent');\n                    }\n                    catch (e) {\n                        this.quillEditor.setText(this.content, 'silent');\n                    }\n                }\n                else {\n                    if (this.sanitize) {\n                        this.content = this.domSanitizer.sanitize(SecurityContext.HTML, this.content);\n                    }\n                    const contents = this.quillEditor.clipboard.convert(this.content);\n                    this.quillEditor.setContents(contents, 'silent');\n                }\n                this.quillEditor.getModule('history').clear();\n            }\n            // initialize disabled status based on this.disabled as default value\n            this.setDisabledState();\n            // triggered if selection or text changed\n            this.quillEditor.on('editor-change', this.editorChangeHandler);\n            // mark model as touched if editor lost focus\n            this.quillEditor.on('selection-change', this.selectionChangeHandler);\n            // update model if text changes\n            this.quillEditor.on('text-change', this.textChangeHandler);\n            // trigger created in a timeout to avoid changed models after checked\n            // if you are using the editor api in created output to change the editor content\n            setTimeout(() => {\n                if (this.onValidatorChanged) {\n                    this.onValidatorChanged();\n                }\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n    ngOnDestroy() {\n        if (this.quillEditor) {\n            this.quillEditor.off('selection-change', this.selectionChangeHandler);\n            this.quillEditor.off('text-change', this.textChangeHandler);\n            this.quillEditor.off('editor-change', this.editorChangeHandler);\n        }\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        // tslint:disable:no-string-literal\n        if (changes['readOnly']) {\n            this.quillEditor.enable(!changes['readOnly'].currentValue);\n        }\n        if (changes['placeholder']) {\n            this.quillEditor.root.dataset.placeholder =\n                changes['placeholder'].currentValue;\n        }\n        if (changes['styles']) {\n            const currentStyling = changes['styles'].currentValue;\n            const previousStyling = changes['styles'].previousValue;\n            if (previousStyling) {\n                Object.keys(previousStyling).forEach((key) => {\n                    this.renderer.removeStyle(this.editorElem, key);\n                });\n            }\n            if (currentStyling) {\n                Object.keys(currentStyling).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n        }\n        if (changes['classes']) {\n            const currentClasses = changes['classes'].currentValue;\n            const previousClasses = changes['classes'].previousValue;\n            if (previousClasses) {\n                this.removeClasses(previousClasses);\n            }\n            if (currentClasses) {\n                this.addClasses(currentClasses);\n            }\n        }\n        // tslint:enable:no-string-literal\n    }\n    addClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.addClass(this.editorElem, c);\n        });\n    }\n    removeClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.removeClass(this.editorElem, c);\n        });\n    }\n    writeValue(currentValue) {\n        this.content = currentValue;\n        const format = getFormat(this.format, this.service.config.format);\n        if (this.quillEditor) {\n            if (currentValue) {\n                if (format === 'text') {\n                    this.quillEditor.setText(currentValue);\n                }\n                else {\n                    this.quillEditor.setContents(this.valueSetter(this.quillEditor, this.content));\n                }\n                return;\n            }\n            this.quillEditor.setText('');\n        }\n    }\n    setDisabledState(isDisabled = this.disabled) {\n        // store initial value to set appropriate disabled status after ViewInit\n        this.disabled = isDisabled;\n        if (this.quillEditor) {\n            if (isDisabled) {\n                this.quillEditor.disable();\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n            }\n            else {\n                if (!this.readOnly) {\n                    this.quillEditor.enable();\n                }\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this.onValidatorChanged = fn;\n    }\n    validate() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const err = {};\n        let valid = true;\n        const text = this.quillEditor.getText();\n        // trim text if wanted + handle special case that an empty editor contains a new line\n        const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1);\n        if (this.minLength && textLength && textLength < this.minLength) {\n            err.minLengthError = {\n                given: textLength,\n                minLength: this.minLength\n            };\n            valid = false;\n        }\n        if (this.maxLength && textLength > this.maxLength) {\n            err.maxLengthError = {\n                given: textLength,\n                maxLength: this.maxLength\n            };\n            valid = false;\n        }\n        if (this.required && !textLength) {\n            err.requiredError = {\n                empty: true\n            };\n            valid = false;\n        }\n        return valid ? null : err;\n    }\n}\nQuillEditorBase.ɵfac = function QuillEditorBase_Factory(t) { return new (t || QuillEditorBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillEditorBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: QuillEditorBase, inputs: { required: \"required\", customToolbarPosition: \"customToolbarPosition\", sanitize: \"sanitize\", styles: \"styles\", strict: \"strict\", customOptions: \"customOptions\", customModules: \"customModules\", preserveWhitespace: \"preserveWhitespace\", trimOnValidation: \"trimOnValidation\", valueGetter: \"valueGetter\", valueSetter: \"valueSetter\", format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", readOnly: \"readOnly\", placeholder: \"placeholder\", maxLength: \"maxLength\", minLength: \"minLength\", formats: \"formats\", scrollingContainer: \"scrollingContainer\", bounds: \"bounds\", trackChanges: \"trackChanges\", classes: \"classes\" }, outputs: { onEditorCreated: \"onEditorCreated\", onEditorChanged: \"onEditorChanged\", onContentChanged: \"onContentChanged\", onSelectionChanged: \"onSelectionChanged\", onFocus: \"onFocus\", onBlur: \"onBlur\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nQuillEditorBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: QuillService }\n];\nQuillEditorBase.propDecorators = {\n    format: [{ type: Input }],\n    theme: [{ type: Input }],\n    modules: [{ type: Input }],\n    debug: [{ type: Input }],\n    readOnly: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    maxLength: [{ type: Input }],\n    minLength: [{ type: Input }],\n    required: [{ type: Input }],\n    formats: [{ type: Input }],\n    customToolbarPosition: [{ type: Input }],\n    sanitize: [{ type: Input }],\n    styles: [{ type: Input }],\n    strict: [{ type: Input }],\n    scrollingContainer: [{ type: Input }],\n    bounds: [{ type: Input }],\n    customOptions: [{ type: Input }],\n    customModules: [{ type: Input }],\n    trackChanges: [{ type: Input }],\n    preserveWhitespace: [{ type: Input }],\n    classes: [{ type: Input }],\n    trimOnValidation: [{ type: Input }],\n    onEditorCreated: [{ type: Output }],\n    onEditorChanged: [{ type: Output }],\n    onContentChanged: [{ type: Output }],\n    onSelectionChanged: [{ type: Output }],\n    onFocus: [{ type: Output }],\n    onBlur: [{ type: Output }],\n    valueGetter: [{ type: Input }],\n    valueSetter: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillEditorBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.DomSanitizer }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }, { type: QuillService }]; }, { required: [{\n            type: Input\n        }], customToolbarPosition: [{\n            type: Input\n        }], sanitize: [{\n            type: Input\n        }], styles: [{\n            type: Input\n        }], strict: [{\n            type: Input\n        }], customOptions: [{\n            type: Input\n        }], customModules: [{\n            type: Input\n        }], preserveWhitespace: [{\n            type: Input\n        }], trimOnValidation: [{\n            type: Input\n        }], onEditorCreated: [{\n            type: Output\n        }], onEditorChanged: [{\n            type: Output\n        }], onContentChanged: [{\n            type: Output\n        }], onSelectionChanged: [{\n            type: Output\n        }], onFocus: [{\n            type: Output\n        }], onBlur: [{\n            type: Output\n        }], valueGetter: [{\n            type: Input\n        }], valueSetter: [{\n            type: Input\n        }], format: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], modules: [{\n            type: Input\n        }], debug: [{\n            type: Input\n        }], readOnly: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], maxLength: [{\n            type: Input\n        }], minLength: [{\n            type: Input\n        }], formats: [{\n            type: Input\n        }], scrollingContainer: [{\n            type: Input\n        }], bounds: [{\n            type: Input\n        }], trackChanges: [{\n            type: Input\n        }], classes: [{\n            type: Input\n        }] }); })();\nclass QuillEditorComponent extends QuillEditorBase {\n    constructor(elementRef, domSanitizer, doc, platformId, renderer, zone, service) {\n        super(elementRef, domSanitizer, doc, platformId, renderer, zone, service);\n    }\n}\nQuillEditorComponent.ɵfac = function QuillEditorComponent_Factory(t) { return new (t || QuillEditorComponent)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(DomSanitizer), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillEditorComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: QuillEditorComponent, selectors: [[\"quill-editor\"]], features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                multi: true,\n                provide: NG_VALUE_ACCESSOR,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent)\n            },\n            {\n                multi: true,\n                provide: NG_VALIDATORS,\n                // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                useExisting: forwardRef(() => QuillEditorComponent)\n            }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, template: function QuillEditorComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n    } }, encapsulation: 2 });\nQuillEditorComponent.ctorParameters = () => [\n    { type: ElementRef, decorators: [{ type: Inject, args: [ElementRef,] }] },\n    { type: DomSanitizer, decorators: [{ type: Inject, args: [DomSanitizer,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: Renderer2, decorators: [{ type: Inject, args: [Renderer2,] }] },\n    { type: NgZone, decorators: [{ type: Inject, args: [NgZone,] }] },\n    { type: QuillService, decorators: [{ type: Inject, args: [QuillService,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillEditorComponent, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                providers: [\n                    {\n                        multi: true,\n                        provide: NG_VALUE_ACCESSOR,\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                        useExisting: forwardRef(() => QuillEditorComponent)\n                    },\n                    {\n                        multi: true,\n                        provide: NG_VALIDATORS,\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                        useExisting: forwardRef(() => QuillEditorComponent)\n                    }\n                ],\n                selector: 'quill-editor',\n                template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef, decorators: [{\n                type: Inject,\n                args: [ElementRef]\n            }] }, { type: ɵngcc1.DomSanitizer, decorators: [{\n                type: Inject,\n                args: [DomSanitizer]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.Renderer2, decorators: [{\n                type: Inject,\n                args: [Renderer2]\n            }] }, { type: ɵngcc0.NgZone, decorators: [{\n                type: Inject,\n                args: [NgZone]\n            }] }, { type: QuillService, decorators: [{\n                type: Inject,\n                args: [QuillService]\n            }] }]; }, null); })();\n\nclass QuillViewHTMLComponent {\n    constructor(sanitizer, service) {\n        this.sanitizer = sanitizer;\n        this.service = service;\n        this.innerHTML = '';\n        this.themeClass = 'ql-snow';\n        this.content = '';\n    }\n    ngOnChanges(changes) {\n        if (changes.theme) {\n            const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        else if (!this.theme) {\n            const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        if (changes.content) {\n            this.innerHTML = this.sanitizer.bypassSecurityTrustHtml(changes.content.currentValue);\n        }\n    }\n}\nQuillViewHTMLComponent.ɵfac = function QuillViewHTMLComponent_Factory(t) { return new (t || QuillViewHTMLComponent)(ɵngcc0.ɵɵdirectiveInject(DomSanitizer), ɵngcc0.ɵɵdirectiveInject(QuillService)); };\nQuillViewHTMLComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: QuillViewHTMLComponent, selectors: [[\"quill-view-html\"]], inputs: { content: \"content\", theme: \"theme\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[1, \"ql-container\", 3, \"ngClass\"], [1, \"ql-editor\", 3, \"innerHTML\"]], template: function QuillViewHTMLComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngClass\", ctx.themeClass);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"innerHTML\", ctx.innerHTML, ɵngcc0.ɵɵsanitizeHtml);\n    } }, directives: [ɵngcc2.NgClass], styles: [\"\\n.ql-container.ngx-quill-view-html {\\n  border: 0;\\n}\\n\"], encapsulation: 2 });\nQuillViewHTMLComponent.ctorParameters = () => [\n    { type: DomSanitizer, decorators: [{ type: Inject, args: [DomSanitizer,] }] },\n    { type: QuillService }\n];\nQuillViewHTMLComponent.propDecorators = {\n    content: [{ type: Input }],\n    theme: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillViewHTMLComponent, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                selector: 'quill-view-html',\n                template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`,\n                styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`]\n            }]\n    }], function () { return [{ type: ɵngcc1.DomSanitizer, decorators: [{\n                type: Inject,\n                args: [DomSanitizer]\n            }] }, { type: QuillService }]; }, { content: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }] }); })();\n\nclass QuillViewComponent {\n    constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.sanitize = false;\n        this.strict = true;\n        this.customModules = [];\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            let content = value;\n            if (format === 'text') {\n                quillEditor.setText(content);\n            }\n            else {\n                if (format === 'html') {\n                    if (this.sanitize) {\n                        value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                    }\n                    content = quillEditor.clipboard.convert(value);\n                }\n                else if (format === 'json') {\n                    try {\n                        content = JSON.parse(value);\n                    }\n                    catch (e) {\n                        content = [{ insert: value }];\n                    }\n                }\n                quillEditor.setContents(content);\n            }\n        };\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (changes.content) {\n            this.valueSetter(this.quillEditor, changes.content.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPlatformServer(this.platformId)) {\n                return;\n            }\n            const Quill = yield this.service.getQuill();\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            modules.toolbar = false;\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ?\n                    Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined);\n            }\n            const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.elementRef.nativeElement.insertAdjacentHTML('afterbegin', this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    readOnly: true,\n                    strict: this.strict,\n                    theme\n                });\n            });\n            this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n            if (this.content) {\n                this.valueSetter(this.quillEditor, this.content);\n            }\n        });\n    }\n}\nQuillViewComponent.ɵfac = function QuillViewComponent_Factory(t) { return new (t || QuillViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(QuillService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };\nQuillViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: QuillViewComponent, selectors: [[\"quill-view\"]], inputs: { sanitize: \"sanitize\", strict: \"strict\", customModules: \"customModules\", customOptions: \"customOptions\", preserveWhitespace: \"preserveWhitespace\", format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", formats: \"formats\", content: \"content\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 0, vars: 0, template: function QuillViewComponent_Template(rf, ctx) { }, styles: [\"\\n.ql-container.ngx-quill-view {\\n  border: 0;\\n}\\n\"], encapsulation: 2 });\nQuillViewComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NgZone },\n    { type: QuillService },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }\n];\nQuillViewComponent.propDecorators = {\n    format: [{ type: Input }],\n    theme: [{ type: Input }],\n    modules: [{ type: Input }],\n    debug: [{ type: Input }],\n    formats: [{ type: Input }],\n    sanitize: [{ type: Input }],\n    strict: [{ type: Input }],\n    content: [{ type: Input }],\n    customModules: [{ type: Input }],\n    customOptions: [{ type: Input }],\n    preserveWhitespace: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillViewComponent, [{\n        type: Component,\n        args: [{\n                encapsulation: ViewEncapsulation.None,\n                selector: 'quill-view',\n                template: `\n`,\n                styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.NgZone }, { type: QuillService }, { type: ɵngcc1.DomSanitizer }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, { sanitize: [{\n            type: Input\n        }], strict: [{\n            type: Input\n        }], customModules: [{\n            type: Input\n        }], customOptions: [{\n            type: Input\n        }], preserveWhitespace: [{\n            type: Input\n        }], format: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], modules: [{\n            type: Input\n        }], debug: [{\n            type: Input\n        }], formats: [{\n            type: Input\n        }], content: [{\n            type: Input\n        }] }); })();\n\nclass QuillModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillModule,\n            providers: [\n                {\n                    provide: QUILL_CONFIG_TOKEN,\n                    useValue: config\n                }\n            ]\n        };\n    }\n}\nQuillModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: QuillModule });\nQuillModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function QuillModule_Factory(t) { return new (t || QuillModule)(); }, providers: [QuillService], imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(QuillModule, { declarations: function () { return [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(QuillModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    QuillEditorComponent,\n                    QuillViewComponent,\n                    QuillViewHTMLComponent\n                ],\n                exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                imports: [CommonModule],\n                providers: [QuillService]\n            }]\n    }], null, null); })();\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent, defaultModules };\n\n//# sourceMappingURL=ngx-quill.js.map","import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport { Mail } from './mail.model';\r\nimport { MailboxService } from './mailbox.service';\r\n\r\n@Component({\r\n  selector: 'app-mailbox',\r\n  templateUrl: './mailbox.component.html',\r\n  styleUrls: ['./mailbox.component.scss'],\r\n  providers: [ MailboxService ]\r\n})\r\nexport class MailboxComponent implements OnInit {\r\n  @ViewChild('sidenav') sidenav: any;\r\n  public settings: Settings;\r\n  public sidenavOpen:boolean = true;\r\n  public mails: Array<Mail>;\r\n  public mail: Mail;\r\n  public newMail: boolean;\r\n  public type:string = 'all';\r\n  public searchText: string;\r\n  public form:FormGroup;\r\n\r\n  constructor(public appSettings:AppSettings, \r\n              public formBuilder: FormBuilder, \r\n              public snackBar: MatSnackBar,\r\n              private mailboxService:MailboxService) { \r\n    this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getMails();      \r\n    if(window.innerWidth <= 992){\r\n      this.sidenavOpen = false;\r\n    }\r\n    this.form = this.formBuilder.group({\r\n      'to': ['', Validators.required],\r\n      'cc': null,\r\n      'subject': null,    \r\n      'message': null\r\n    });  \r\n  }\r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void {\r\n    (window.innerWidth <= 992) ? this.sidenavOpen = false : this.sidenavOpen = true;\r\n  }\r\n\r\n  public getMails(){\r\n    switch (this.type) {\r\n      case 'all': \r\n        this.mails = this.mailboxService.getAllMails();\r\n        break;\r\n      case 'starred':\r\n        this.mails =  this.mailboxService.getStarredMails();\r\n        break;\r\n      case 'sent':\r\n        this.mails =  this.mailboxService.getSentMails();\r\n        break;\r\n      case 'drafts':\r\n        this.mails =  this.mailboxService.getDraftMails();\r\n        break;\r\n      case 'trash':\r\n        this.mails =  this.mailboxService.getTrashMails();\r\n        break;\r\n      default:\r\n        this.mails =  this.mailboxService.getDraftMails();\r\n    }  \r\n  }\r\n\r\n  public viewDetail(mail){\r\n    this.mail = this.mailboxService.getMail(mail.id);    \r\n    this.mails.forEach(m => m.selected = false);\r\n    this.mail.selected = true;\r\n    this.mail.unread = false;\r\n    this.newMail = false;\r\n    if(window.innerWidth <= 992){\r\n      this.sidenav.close(); \r\n    }\r\n  }\r\n\r\n  public compose(){\r\n    this.mail = null;\r\n    this.newMail = true;\r\n  }\r\n\r\n  public setAsRead(){\r\n    this.mail.unread = false;\r\n  }\r\n\r\n  public setAsUnRead(){\r\n    this.mail.unread = true;\r\n  }\r\n\r\n  public delete() {\r\n    this.mail.trash = true;\r\n    this.mail.sent = false;\r\n    this.mail.draft = false; \r\n    this.mail.starred = false; \r\n    this.getMails();\r\n    this.mail = null;\r\n  }\r\n\r\n  public changeStarStatus() {       \r\n    this.mail.starred = !this.mail.starred;\r\n    this.getMails(); \r\n  }\r\n\r\n  public restore(){\r\n    this.mail.trash = false;\r\n    this.type = 'all';\r\n    this.getMails();\r\n    this.mail = null; \r\n  }\r\n\r\n  public onSubmit(mail){\r\n    console.log(mail)\r\n    if (this.form.valid) {\r\n      this.snackBar.open('Mail sent to ' + mail.to + ' successfully!', null, {\r\n        duration: 2000,\r\n      });\r\n      this.form.reset();     \r\n    }\r\n  }\r\n\r\n}\r\n","export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <mat-card class=\\\"p-0 mailbox\\\">\\r\\n            <mat-sidenav-container>\\r\\n                <mat-sidenav #sidenav [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\" class=\\\"mailbox-sidenav mat-elevation-z1\\\">\\r\\n                    <mat-toolbar color=\\\"primary\\\" class=\\\"p-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                        <input [(ngModel)]=\\\"searchText\\\" type=\\\"text\\\" placeholder=\\\"Search mail...\\\" class=\\\"search mat-elevation-z3\\\">\\r\\n                        <button mat-icon-button [matMenuTriggerFor]=\\\"filterMenu\\\" #filterMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n                            <mat-icon>more_vert</mat-icon>\\r\\n                        </button>                                     \\r\\n                    </mat-toolbar>\\r\\n                    <mat-menu #filterMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" overlapTrigger=\\\"true\\\">\\r\\n                        <span (mouseleave)=\\\"filterMenuTrigger.closeMenu()\\\">\\r\\n                            <button mat-menu-item (click)=\\\"type = 'all';getMails();\\\">All</button>\\r\\n                            <button mat-menu-item (click)=\\\"type = 'starred';getMails();\\\">Starred</button>\\r\\n                            <button mat-menu-item (click)=\\\"type = 'sent';getMails();\\\">Sent</button>\\r\\n                            <button mat-menu-item (click)=\\\"type = 'drafts';getMails();\\\">Drafts</button>\\r\\n                            <button mat-menu-item (click)=\\\"type = 'trash';getMails();\\\">Trash</button>\\r\\n                        </span>\\r\\n                    </mat-menu> \\r\\n                    <mat-nav-list class=\\\"p-0 mailbox-sidenav-list\\\" perfectScrollbar>\\r\\n                        <div *ngFor=\\\"let mail of mails | MailSearch : searchText\\\" (click)=\\\"viewDetail(mail)\\\">\\r\\n                            <mat-list-item [ngClass]=\\\"{'unread': mail.unread, 'selected': mail.selected}\\\">\\r\\n                                <img *ngIf=\\\"mail.senderPhoto\\\" matListAvatar  [src]=\\\"mail.senderPhoto\\\">\\r\\n                                <img *ngIf=\\\"!mail.senderPhoto\\\" matListAvatar src=\\\"assets/img/users/default-user.jpg\\\">\\r\\n                                <div matLine fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between space-between\\\">   \\r\\n                                    <h4 class=\\\"text-truncate sender\\\">{{mail.sender}}</h4> \\r\\n                                    <small>{{mail.date}}</small> \\r\\n                                </div>\\r\\n                                <p matLine class=\\\"text-truncate subject\\\">{{mail.subject}}</p>\\r\\n                            </mat-list-item>\\r\\n                            <mat-divider></mat-divider>\\r\\n                        </div>                        \\r\\n                    </mat-nav-list>\\r\\n                </mat-sidenav>              \\r\\n                <div>\\r\\n                    <mat-toolbar color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                            <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n                                <mat-icon>list</mat-icon>\\r\\n                            </button>\\r\\n                            <button *ngIf=\\\"mail && type !='trash'\\\" mat-icon-button matTooltip=\\\"Reply\\\" matTooltipPosition=\\\"above\\\">\\r\\n                                <mat-icon>reply</mat-icon>\\r\\n                            </button>\\r\\n                            <button *ngIf=\\\"newMail\\\" mat-icon-button (click)=\\\"newMail = false;\\\" matTooltip=\\\"Back\\\" matTooltipPosition=\\\"above\\\">\\r\\n                                <mat-icon>arrow_back</mat-icon>\\r\\n                            </button>\\r\\n                            <button *ngIf=\\\"mail && type !='trash'\\\" mat-icon-button (click)=\\\"changeStarStatus()\\\" matTooltip=\\\"Mark as inportant\\\" matTooltipPosition=\\\"above\\\" fxShow=\\\"false\\\" fxShow.gt-xs>\\r\\n                                <mat-icon *ngIf=\\\"mail.starred\\\">star</mat-icon>\\r\\n                                <mat-icon *ngIf=\\\"!mail.starred\\\">star_border</mat-icon>\\r\\n                            </button> \\r\\n                            <button *ngIf=\\\"mail && type=='trash'\\\" mat-icon-button (click)=\\\"restore()\\\" matTooltip=\\\"Restore\\\" matTooltipPosition=\\\"above\\\">\\r\\n                                <mat-icon>undo</mat-icon>\\r\\n                            </button> \\r\\n                            <button *ngIf=\\\"mail\\\" mat-icon-button matTooltip=\\\"Report spam\\\" matTooltipPosition=\\\"above\\\" fxShow=\\\"false\\\" fxShow.gt-xs>\\r\\n                                <mat-icon>error</mat-icon>\\r\\n                            </button> \\r\\n                            <button *ngIf=\\\"mail && type !='trash'\\\" mat-icon-button (click)=\\\"delete()\\\" matTooltip=\\\"Move to trash\\\" matTooltipPosition=\\\"above\\\">\\r\\n                                <mat-icon>delete</mat-icon>\\r\\n                            </button>\\r\\n                            <button mat-icon-button [matMenuTriggerFor]=\\\"moreMenu\\\" #moreMenuTrigger=\\\"matMenuTrigger\\\" [style.display]=\\\"(mail) ? 'block' : 'none'\\\">\\r\\n                                <mat-icon>more_vert</mat-icon>\\r\\n                            </button>\\r\\n                        </div>\\r\\n                        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"compose()\\\">Compose</button>\\r\\n                    </mat-toolbar>\\r\\n                    <mat-menu #moreMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" overlapTrigger=\\\"true\\\">\\r\\n                        <span (mouseleave)=\\\"moreMenuTrigger.closeMenu()\\\">\\r\\n                            <button mat-menu-item (click)=\\\"setAsRead()\\\">Mark as read</button>\\r\\n                            <button mat-menu-item (click)=\\\"setAsUnRead()\\\">Mark as unread</button>\\r\\n                            <button mat-menu-item (click)=\\\"delete()\\\">Delete</button>\\r\\n                        </span>\\r\\n                    </mat-menu> \\r\\n                    <div class=\\\"mailbox-content\\\" perfectScrollbar>\\r\\n                        <div *ngIf=\\\"mail\\\">\\r\\n                            <mat-list class=\\\"p-0\\\">\\r\\n                                <mat-list-item class=\\\"h-100 py-1\\\">\\r\\n                                    <div matLine  fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                                        <h2 class=\\\"subject\\\">{{mail.subject}}</h2>\\r\\n                                        <mat-icon class=\\\"muted-text\\\">print</mat-icon>\\r\\n                                    </div>                                    \\r\\n                                </mat-list-item>\\r\\n                                <mat-divider></mat-divider> \\r\\n                                <mat-list-item class=\\\"h-100 py-1\\\">\\r\\n                                    <img *ngIf=\\\"mail.senderPhoto\\\" matListAvatar  [src]=\\\"mail.senderPhoto\\\">\\r\\n                                    <img *ngIf=\\\"!mail.senderPhoto\\\" matListAvatar src=\\\"assets/img/users/default-user.jpg\\\">\\r\\n                                    <h6 matLine fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                                        <span>\\r\\n                                            <strong class=\\\"text-truncate\\\">{{mail.sender}}</strong>\\r\\n                                            <span *ngIf=\\\"mail.senderMail\\\" class=\\\"email\\\">&lt;{{mail.senderMail}}&gt;</span>\\r\\n                                        </span>\\r\\n                                        <span>{{mail.date}}</span>\\r\\n                                    </h6>\\r\\n                                    <span matLine>to me</span>\\r\\n                                </mat-list-item>\\r\\n                                <mat-divider></mat-divider>\\r\\n                            </mat-list>\\r\\n                            <div class=\\\"mail-body\\\" [innerHTML]=\\\"mail.body\\\"></div>\\r\\n                            <div *ngIf=\\\"mail.attachments.length > 0\\\" class=\\\"mail-body\\\">\\r\\n                                <mat-divider></mat-divider>\\r\\n                                <p>\\r\\n                                    <strong>{{mail.attachments.length}} attachments</strong>\\r\\n                                    <button mat-icon-button matTooltip=\\\"Download all attachments\\\" matTooltipPosition=\\\"above\\\">\\r\\n                                        <mat-icon>file_download</mat-icon>\\r\\n                                    </button>\\r\\n                                    <button mat-icon-button matTooltip=\\\"View all Images\\\" matTooltipPosition=\\\"above\\\">\\r\\n                                        <mat-icon>pageview</mat-icon>\\r\\n                                    </button>\\r\\n                                </p>\\r\\n                                <div *ngFor=\\\"let attachment of mail.attachments; let i = index\\\">\\r\\n                                    <img [src]=\\\"attachment\\\" alt=\\\"attachment\\\">\\r\\n                                    <h3>image-{{i + 1}}.jpg</h3>\\r\\n                                    <p>\\r\\n                                        <span>457K</span>\\r\\n                                        <button mat-icon-button>\\r\\n                                            <mat-icon>file_download</mat-icon>\\r\\n                                        </button>\\r\\n                                        <button mat-icon-button>\\r\\n                                            <mat-icon>pageview</mat-icon>\\r\\n                                        </button>\\r\\n                                    </p>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!mail && !newMail\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"h-100 empty\\\">\\r\\n                            <mat-icon>mail_outline</mat-icon>            \\r\\n                            <p>Select a mail to read</p>\\r\\n                        </div> \\r\\n                        <form *ngIf=\\\"newMail\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\" class=\\\"mail-body\\\"> \\r\\n                            <mat-form-field class=\\\"w-100\\\">\\r\\n                                <input matInput placeholder=\\\"To\\\" formControlName=\\\"to\\\">\\r\\n                            </mat-form-field> \\r\\n                            <mat-form-field class=\\\"w-100\\\">\\r\\n                                <input matInput placeholder=\\\"Cc/Bcc\\\" formControlName=\\\"cc\\\">\\r\\n                            </mat-form-field> \\r\\n                            <mat-form-field class=\\\"w-100\\\">\\r\\n                                <input matInput placeholder=\\\"Subject\\\" formControlName=\\\"subject\\\">\\r\\n                            </mat-form-field>                          \\r\\n                            <quill-editor formControlName=\\\"message\\\"></quill-editor>                            \\r\\n                            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                                <button mat-raised-button (click)=\\\"newMail = false;\\\" type=\\\"button\\\">Cancel</button>\\r\\n                                <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Send</button>\\r\\n                            </div> \\r\\n                        </form> \\r\\n                    </div>\\r\\n                </div>            \\r\\n            </mat-sidenav-container>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n</div>\";","export default \".mailbox .search {\\n  margin: 0 14px;\\n  width: 100%;\\n  border: none;\\n  border-radius: 2px;\\n  padding: 6px;\\n  outline: none;\\n}\\n.mailbox .mail-body {\\n  padding: 16px;\\n}\\n.mailbox .empty mat-icon {\\n  font-size: 220px;\\n  height: 220px;\\n  width: 220px;\\n  opacity: 0.4;\\n}\\n.mailbox .empty p {\\n  font-size: 18px;\\n  opacity: 0.8;\\n}\\n.mailbox-sidenav {\\n  width: 350px;\\n  border-right: 1px solid transparent;\\n  overflow: hidden;\\n}\\n.mailbox-content {\\n  height: calc(100vh - (56px + 8px*2 + 132px));\\n}\\n.mailbox-content .mat-line {\\n  white-space: unset;\\n}\\n.mailbox-content .subject {\\n  font-weight: 500;\\n}\\n.mailbox-sidenav-list {\\n  height: calc(100vh - (56px + 8px*2 + 132px));\\n}\\n.mailbox-sidenav-list .sender {\\n  font-weight: 400;\\n}\\n.mailbox-sidenav-list .subject {\\n  font-size: 13px;\\n}\\n.mailbox-sidenav-list .unread .mat-line, .mailbox-sidenav-list .unread .sender {\\n  font-weight: bold;\\n}\\n.mailbox-sidenav-list .selected {\\n  background: rgba(0, 0, 0, 0.15);\\n}\\n@media (max-width: 575px) {\\n  .mailbox-sidenav {\\n    width: 280px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxtYWlsYm94LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdJO0VBQ0ksY0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtBQUZSO0FBSUk7RUFDSSxhQUFBO0FBRlI7QUFLUTtFQUNJLGdCQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7RUFDQSxZQUFBO0FBSFo7QUFLUTtFQUNJLGVBQUE7RUFDQSxZQUFBO0FBSFo7QUFPQTtFQUNJLFlBQUE7RUFDQSxtQ0FBQTtFQUNBLGdCQUFBO0FBSko7QUFNQTtFQUNJLDRDQUFBO0FBSEo7QUFJSTtFQUNJLGtCQUFBO0FBRlI7QUFJSTtFQUNJLGdCQUFBO0FBRlI7QUFLQTtFQUNJLDRDQUFBO0FBRko7QUFHSTtFQUNJLGdCQUFBO0FBRFI7QUFHSTtFQUNJLGVBQUE7QUFEUjtBQUdJO0VBQ0ksaUJBQUE7QUFEUjtBQUdJO0VBQ0ksK0JBQUE7QUFEUjtBQUtBO0VBQ0k7SUFDSSxZQUFBO0VBRk47QUFDRiIsImZpbGUiOiJtYWlsYm94LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCBcIi4uLy4uL3RoZW1lL3N0eWxlcy92YXJpYWJsZXNcIjtcclxuXHJcbi5tYWlsYm94eyBcclxuICAgIC5zZWFyY2h7XHJcbiAgICAgICAgbWFyZ2luOiAwIDE0cHg7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDJweDtcclxuICAgICAgICBwYWRkaW5nOiA2cHg7XHJcbiAgICAgICAgb3V0bGluZTogbm9uZTtcclxuICAgIH1cclxuICAgIC5tYWlsLWJvZHl7XHJcbiAgICAgICAgcGFkZGluZzogMTZweDtcclxuICAgIH0gICBcclxuICAgIC5lbXB0eXtcclxuICAgICAgICBtYXQtaWNvbntcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyMjBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAyMjBweDtcclxuICAgICAgICAgICAgd2lkdGg6IDIyMHB4O1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAwLjQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICAgICAgb3BhY2l0eTogMC44O1xyXG4gICAgICAgIH1cclxuICAgIH0gICAgXHJcbn1cclxuLm1haWxib3gtc2lkZW5hdntcclxuICAgIHdpZHRoOiAzNTBweDtcclxuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG4ubWFpbGJveC1jb250ZW50e1xyXG4gICAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gKCN7JHRvb2xiYXItaGVpZ2h0fSArICN7JGlubmVyLXNpZGVuYXYtY29udGVudC1wYWRkaW5nfSoyICsgMTMycHgpKTtcclxuICAgIC5tYXQtbGluZXtcclxuICAgICAgICB3aGl0ZS1zcGFjZTogdW5zZXQ7XHJcbiAgICB9XHJcbiAgICAuc3ViamVjdHtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgfVxyXG59XHJcbi5tYWlsYm94LXNpZGVuYXYtbGlzdHtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtICgjeyR0b29sYmFyLWhlaWdodH0gKyAjeyRpbm5lci1zaWRlbmF2LWNvbnRlbnQtcGFkZGluZ30qMiArIDEzMnB4KSk7XHJcbiAgICAuc2VuZGVye1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICB9XHJcbiAgICAuc3ViamVjdHtcclxuICAgICAgICBmb250LXNpemU6IDEzcHg7XHJcbiAgICB9XHJcbiAgICAudW5yZWFkIC5tYXQtbGluZSwgLnVucmVhZCAuc2VuZGVyIHtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIH1cclxuICAgIC5zZWxlY3RlZHtcclxuICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsMCwwLC4xNSk7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSAobWF4LXdpZHRoOiA1NzVweCkgeyBcclxuICAgIC5tYWlsYm94LXNpZGVuYXZ7XHJcbiAgICAgICAgd2lkdGg6IDI4MHB4O1xyXG4gICAgfVxyXG59Il19 */\";","export class Mail {\r\n    constructor(public id: number,\r\n                public sender: string,\r\n                public senderPhoto: string,\r\n                public senderMail: string,\r\n                public subject: string,\r\n                public date:string,\r\n                public body: string,\r\n                public attachment:boolean,\r\n                public attachments: string[],\r\n                public unread: boolean,\r\n                public sent: boolean,\r\n                public starred: boolean,\r\n                public draft: boolean,\r\n                public trash: boolean,\r\n                public selected:boolean) { }\r\n}"],"sourceRoot":"webpack:///"}