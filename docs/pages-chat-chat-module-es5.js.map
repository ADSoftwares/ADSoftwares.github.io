{"version":3,"sources":["webpack:///src/app/pages/chat/chat.component.html","webpack:///src/app/pages/chat/chat.service.ts","webpack:///src/app/pages/chat/chat.module.ts","webpack:///src/app/pages/chat/chat.model.ts","webpack:///src/app/pages/chat/chat.component.ts","webpack:///src/app/pages/chat/chat.component.scss"],"names":["date","Date","day","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","chats","talks","ChatService","routes","path","component","pathMatch","ChatModule","imports","forChild","declarations","Chat","image","author","authorStatus","text","my","ChatComponent","appSettings","chatService","userImage","sidenavOpen","settings","getChats","window","innerWidth","obj","length","getTalk","push","currentChat","forEach","talk","sidenav","close","$event","which","newMessage","trim","chatContainer","document","querySelector","setTimeout","nodes","querySelectorAll","newChatTextHeight","scrollTop","scrollHeight","clientHeight","selector","template","providers"],"mappings":"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","file":"pages-chat-chat-module-es5.js","sourcesContent":["export default \"<div fxLayout=\\\"row wrap\\\">\\r\\n    <div fxFlex=\\\"100\\\" class=\\\"flex-p\\\"> \\r\\n        <mat-card class=\\\"p-0 chat\\\">\\r\\n            <mat-sidenav-container>\\r\\n              <mat-sidenav #sidenav [opened]=\\\"sidenavOpen\\\" [mode]=\\\"sidenavOpen ? 'side' : 'over'\\\" class=\\\"chat-sidenav mat-elevation-z1\\\">\\r\\n                  <mat-toolbar color=\\\"primary\\\" class=\\\"p-0\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                      <mat-list class=\\\"p-0\\\">\\r\\n                          <mat-list-item>\\r\\n                              <img matListAvatar [src]=\\\"userImage\\\">\\r\\n                          </mat-list-item>\\r\\n                      </mat-list>\\r\\n                      <button mat-icon-button [matMenuTriggerFor]=\\\"userMenu\\\" #userMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n                          <mat-icon>more_vert</mat-icon>\\r\\n                      </button>                                     \\r\\n                  </mat-toolbar>\\r\\n                  <mat-menu #userMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" overlapTrigger=\\\"true\\\">\\r\\n                      <span (mouseleave)=\\\"userMenuTrigger.closeMenu()\\\">\\r\\n                          <button mat-menu-item>\\r\\n                              <mat-icon>account_circle</mat-icon>\\r\\n                              <span>Profile</span>\\r\\n                          </button>\\r\\n                          <button mat-menu-item>\\r\\n                              <mat-icon>settings</mat-icon>\\r\\n                              <span>Settings</span>\\r\\n                          </button>\\r\\n                          <a mat-menu-item routerLink=\\\"/\\\"> \\r\\n                              <mat-icon>power_settings_new</mat-icon>\\r\\n                              <span>Exit chat</span>\\r\\n                          </a>\\r\\n                      </span>\\r\\n                  </mat-menu> \\r\\n                  <mat-nav-list class=\\\"p-0 chat-sidenav-list\\\" perfectScrollbar>\\r\\n                      <mat-list-item *ngFor=\\\"let chat of chats\\\" (click)=\\\"getChat(chat)\\\">\\r\\n                          <img matListAvatar [src]=\\\"chat.image\\\">\\r\\n                          <h6 matLine> {{chat.author}} </h6>\\r\\n                          <p matLine fxLayout=\\\"row\\\" fxLayoutAlign=\\\"none center\\\" class=\\\"muted-text\\\">\\r\\n                              <span [ngSwitch]=\\\"chat.authorStatus\\\">\\r\\n                                  <mat-icon *ngSwitchCase=\\\"'Online'\\\" class=\\\"chat-status-icon\\\">check_circle</mat-icon>\\r\\n                                  <mat-icon *ngSwitchCase=\\\"'Offline'\\\" class=\\\"chat-status-icon\\\">highlight_off</mat-icon>\\r\\n                                  <mat-icon *ngSwitchCase=\\\"'Away'\\\" class=\\\"chat-status-icon\\\">schedule</mat-icon>\\r\\n                                  <mat-icon *ngSwitchCase=\\\"'Do not disturb'\\\" class=\\\"chat-status-icon\\\">not_interested</mat-icon>\\r\\n                              </span>\\r\\n                              <span class=\\\"author-status\\\">{{chat.authorStatus}}</span>\\r\\n                          </p>\\r\\n                      </mat-list-item>\\r\\n                  </mat-nav-list>\\r\\n              </mat-sidenav>\\r\\n            \\r\\n              <div>\\r\\n                  <mat-toolbar color=\\\"primary\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                          <button mat-icon-button (click)=\\\"sidenav.toggle()\\\">\\r\\n                              <mat-icon>list</mat-icon>\\r\\n                          </button>\\r\\n                          <mat-list *ngIf=\\\"currentChat\\\" class=\\\"p-0\\\">\\r\\n                              <mat-list-item>\\r\\n                                  <img matListAvatar [src]=\\\"currentChat.image\\\">\\r\\n                              </mat-list-item>\\r\\n                          </mat-list>\\r\\n                          <span *ngIf=\\\"currentChat\\\" class=\\\"author-name\\\">{{currentChat.author}}</span>\\r\\n                      </div>\\r\\n                      <button mat-icon-button [matMenuTriggerFor]=\\\"personMenu\\\" #personMenuTrigger=\\\"matMenuTrigger\\\">\\r\\n                          <mat-icon>more_vert</mat-icon>\\r\\n                      </button> \\r\\n                  </mat-toolbar>\\r\\n                  <mat-menu #personMenu=\\\"matMenu\\\" xPosition=\\\"before\\\" overlapTrigger=\\\"true\\\">\\r\\n                      <span (mouseleave)=\\\"personMenuTrigger.closeMenu()\\\">\\r\\n                          <button mat-menu-item>\\r\\n                              <mat-icon>account_circle</mat-icon>\\r\\n                              <span>Contact info</span>\\r\\n                          </button>\\r\\n                          <button mat-menu-item>\\r\\n                              <mat-icon>volume_mute</mat-icon>\\r\\n                              <span>Mute</span>\\r\\n                          </button>\\r\\n                          <button mat-menu-item> \\r\\n                              <mat-icon>delete_forever</mat-icon>\\r\\n                              <span>Clear chat</span>\\r\\n                          </button>\\r\\n                      </span>\\r\\n                  </mat-menu> \\r\\n                  <div class=\\\"chat-content\\\" perfectScrollbar>\\r\\n                      <mat-list *ngIf=\\\"talks\\\" class=\\\"p-0\\\" >\\r\\n                          <mat-list-item *ngFor=\\\"let talk of talks\\\" class=\\\"talk-item\\\">\\r\\n                              <img matListAvatar [src]=\\\"talk.image\\\">\\r\\n                              <p matLine class=\\\"message\\\">\\r\\n                                  <span [ngClass]=\\\"(talk.my) ? 'bg-primary' : 'bg-accent'\\\">{{talk.text}}</span>\\r\\n                              </p>                             \\r\\n                              <p matLine class=\\\"message-date\\\">\\r\\n                                  <small>{{talk.date | date:\\\"dd MMMM, yyyy 'at' HH:mm\\\"}}</small>\\r\\n                              </p> \\r\\n                          </mat-list-item>\\r\\n                      </mat-list>\\r\\n                      <div *ngIf=\\\"!talks\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" class=\\\"h-100 empty\\\">\\r\\n                          <mat-icon>chat</mat-icon>            \\r\\n                          <p>Select a interlocutor for talk</p>\\r\\n                      </div> \\r\\n                  </div>\\r\\n                  <mat-divider></mat-divider>\\r\\n                  <mat-card class=\\\"chat-actions\\\"> \\r\\n                      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                          <mat-form-field class=\\\"w-100\\\">\\r\\n                            <input matInput placeholder=\\\"Enter your text...\\\" (keyup)=\\\"sendMessage($event)\\\" [(ngModel)]=\\\"newMessage\\\">\\r\\n                          </mat-form-field>\\r\\n                          <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"scenter center\\\">\\r\\n                              <button mat-icon-button type=\\\"button\\\">\\r\\n                                  <mat-icon>attach_file</mat-icon>\\r\\n                              </button>\\r\\n                              <button mat-mini-fab color=\\\"primary\\\" type=\\\"button\\\" (click)=\\\"sendMessage($event)\\\">\\r\\n                                  <mat-icon>send</mat-icon>\\r\\n                              </button>\\r\\n                          </div>\\r\\n                        </div>\\r\\n                  </mat-card>\\r\\n              </div>\\r\\n            \\r\\n            </mat-sidenav-container>\\r\\n        </mat-card>\\r\\n      </div>\\r\\n</div>\\r\\n\";","import { Injectable } from '@angular/core'\r\nimport { Chat } from './chat.model';\r\n\r\nlet date = new Date(),\r\n    day = date.getDate(),\r\n    month = date.getMonth(),\r\n    year = date.getFullYear(),\r\n    hour = date.getHours(),\r\n    minute = date.getMinutes();\r\n\r\n// let chats = [\r\n//     new Chat(\r\n//         'assets/img/profile/ashley.jpg',\r\n//         'Ashley Ahlberg', \r\n//         'Online',\r\n//         'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Gradus Admin Template?',\r\n//         new Date(year, month, day-2, hour, minute),\r\n//         false\r\n//     ),\r\n//     new Chat(\r\n//         'assets/img/profile/bruno.jpg',\r\n//         'Bruno Vespa',\r\n//         'Do not disturb',\r\n//         'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Gradus Admin Template?',\r\n//         new Date(year, month, day-2, hour, minute),\r\n//         false\r\n//     ),\r\n//     new Chat(\r\n//         'assets/img/profile/julia.jpg',\r\n//         'Julia Aniston',\r\n//         'Away',\r\n//         'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Gradus Admin Template?',\r\n//         new Date(year, month, day-2, hour, minute),\r\n//         false\r\n//     ),\r\n//     new Chat(\r\n//         'assets/img/profile/adam.jpg',\r\n//         'Adam Sandler',\r\n//         'Online',\r\n//         'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Gradus Admin Template?',\r\n//         new Date(year, month, day-2, hour, minute),\r\n//         false\r\n//     ),\r\n//     new Chat(\r\n//         'assets/img/profile/tereza.jpg',\r\n//         'Tereza Stiles',\r\n//         'Offline',\r\n//         'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Gradus Admin Template?',\r\n//         new Date(year, month, day-2, hour, minute),\r\n//         false\r\n//     ),  \r\n//     new Chat(\r\n//         'assets/img/profile/michael.jpg',\r\n//         'Michael Blair',\r\n//         'Online',\r\n//         'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Gradus Admin Template?',\r\n//         new Date(year, month, day-2, hour, minute),\r\n//         false\r\n//     )\r\n// ]\r\n\r\nlet chats = [\r\n    new Chat(\r\n        'assets/img/profile/ashley.jpg',\r\n        'Ashley Ahlberg', \r\n        'Online',\r\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\r\n        new Date(year, month, day-2, hour, minute),\r\n        false\r\n    ),\r\n    new Chat(\r\n        'assets/img/profile/bruno.jpg',\r\n        'Bruno Vespa',\r\n        'Do not disturb',\r\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\r\n        new Date(year, month, day-2, hour, minute),\r\n        false\r\n    ),\r\n    new Chat(\r\n        'assets/img/profile/julia.jpg',\r\n        'Julia Aniston',\r\n        'Away',\r\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\r\n        new Date(year, month, day-2, hour, minute),\r\n        false\r\n    ),\r\n    new Chat(\r\n        'assets/img/profile/adam.jpg',\r\n        'Adam Sandler',\r\n        'Online',\r\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\r\n        new Date(year, month, day-2, hour, minute),\r\n        false\r\n    ),\r\n    new Chat(\r\n        'assets/img/profile/tereza.jpg',\r\n        'Tereza Stiles',\r\n        'Offline',\r\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\r\n        new Date(year, month, day-2, hour, minute),\r\n        false\r\n    ),  \r\n    new Chat(\r\n        'assets/img/profile/michael.jpg',\r\n        'Michael Blair',\r\n        'Online',\r\n        'Great, then I\\'ll definitely buy this theme. Thanks!',\r\n        new Date(year, month, day-2, hour, minute),\r\n        false\r\n    )\r\n]\r\n\r\nlet talks = [\r\n    new Chat(\r\n        'assets/img/profile/ashley.jpg',\r\n        'Ashley Ahlberg', \r\n        'Online',\r\n        'Hi, I\\'m looking for admin template with angular material 2 design.  What do you think about Gradus Admin Template?',\r\n        new Date(year, month, day-2, hour, minute+3),\r\n        false\r\n    ),\r\n    new Chat(\r\n        'assets/img/users/user.jpg',\r\n        'Emilio Verdines', \r\n        'Online',\r\n        'Hi, Gradus is a fully compatible with angular material 2, responsive, organized folder structure, clean & customizable code, easy to use and much more...',\r\n        new Date(year, month, day-2, hour, minute+2),\r\n        true\r\n    )\r\n]\r\n\r\n@Injectable()\r\nexport class ChatService {\r\n\r\n    public getChats():Array<Chat> {\r\n        return chats;\r\n    }\r\n\r\n    public getTalk():Array<Chat> {\r\n        return talks;\r\n    }\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { ChatComponent } from './chat.component';\r\n\r\nexport const routes = [\r\n  { path: '', component: ChatComponent, pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes),\r\n    FormsModule,\r\n    PerfectScrollbarModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    ChatComponent\r\n  ]\r\n})\r\nexport class ChatModule { }","export class Chat {\r\n    constructor(public image: string,\r\n                public author: string,\r\n                public authorStatus: string,\r\n                public text: string,\r\n                public date: Date,\r\n                public my: boolean) { }\r\n} ","import { Component, OnInit, HostListener, ViewChild } from '@angular/core';\r\nimport { AppSettings } from '../../app.settings';\r\nimport { Settings } from '../../app.settings.model';\r\nimport { Chat } from './chat.model';\r\nimport { ChatService } from './chat.service';\r\n\r\n@Component({\r\n  selector: 'app-chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss'],\r\n  providers: [ ChatService ]\r\n})\r\nexport class ChatComponent implements OnInit {\r\n  @ViewChild('sidenav') sidenav: any;\r\n  public settings: Settings;\r\n  public userImage = 'assets/img/users/user.jpg';\r\n  public chats: Array<Chat>;\r\n  public talks: Array<Chat>;\r\n  public sidenavOpen:boolean = true;\r\n  public currentChat:Chat;\r\n  public newMessage:string;\r\n\r\n  constructor(public appSettings:AppSettings, private chatService:ChatService) { \r\n    this.settings = this.appSettings.settings; \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.chats = this.chatService.getChats(); \r\n    if(window.innerWidth <= 768){\r\n      this.sidenavOpen = false;\r\n    }    \r\n  } \r\n\r\n  @HostListener('window:resize')\r\n  public onWindowResize():void {\r\n    (window.innerWidth <= 768) ? this.sidenavOpen = false : this.sidenavOpen = true;\r\n  }\r\n\r\n  public getChat(obj){\r\n    if(this.talks){\r\n       this.talks.length = 2;\r\n    }   \r\n    this.talks = this.chatService.getTalk();\r\n    this.talks.push(obj);\r\n    this.currentChat = obj;      \r\n    this.talks.forEach(talk => {\r\n      if(!talk.my){\r\n        talk.image = obj.image;\r\n      }\r\n    });\r\n    if(window.innerWidth <= 768){\r\n      this.sidenav.close();\r\n    }     \r\n  }\r\n\r\n  public sendMessage($event) {       \r\n    if (($event.which === 1 || $event.which === 13) && this.newMessage.trim() != '') {\r\n      if(this.talks){ \r\n        this.talks.push(\r\n            new Chat(\r\n              'assets/img/users/user.jpg', \r\n              'Emilio Verdines', \r\n              'online', \r\n              this.newMessage,\r\n              new Date(), \r\n              true)\r\n        )\r\n        this.newMessage = '';\r\n        let chatContainer = document.querySelector('.chat-content');\r\n        if(chatContainer){\r\n          setTimeout(() => {\r\n            var nodes = chatContainer.querySelectorAll('.mat-list-item');\r\n            let newChatTextHeight = nodes[nodes.length- 1];\r\n            chatContainer.scrollTop = chatContainer.scrollHeight + newChatTextHeight.clientHeight;\r\n          }); \r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public ngOnDestroy(){\r\n    if(this.talks)\r\n      this.talks.length = 2;\r\n  }\r\n\r\n}","export default \".chat .chat-actions {\\n  padding: 12px;\\n}\\n.chat .author-name {\\n  font-size: 16px;\\n  font-weight: 400;\\n}\\n.chat .talk-item {\\n  padding: 6px 0;\\n  height: 100%;\\n}\\n.chat .message {\\n  white-space: unset;\\n  text-overflow: unset;\\n}\\n.chat .message span {\\n  padding: 6px 10px;\\n  border-radius: 4px;\\n  display: inline-block;\\n  font-size: 14px;\\n}\\n.chat .message-date {\\n  opacity: 0.8;\\n}\\n.chat .empty mat-icon {\\n  font-size: 220px;\\n  height: 220px;\\n  width: 220px;\\n  opacity: 0.4;\\n}\\n.chat .empty p {\\n  font-size: 18px;\\n  opacity: 0.8;\\n}\\n.chat-status-icon {\\n  font-size: 14px;\\n  height: 14px;\\n  width: 14px;\\n  line-height: 22px;\\n  margin-right: 6px;\\n}\\n.author-status {\\n  font-size: 13px;\\n}\\n.chat-sidenav {\\n  border-right: 1px solid transparent;\\n  overflow: hidden;\\n  width: 200px;\\n}\\n.chat-content {\\n  padding: 12px;\\n  height: calc(100vh - (56px + 8px*2 + 238px));\\n}\\n.chat-sidenav-list {\\n  height: calc(100vh - (56px + 8px*2 + 134px));\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFxjaGF0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdJO0VBQ0ksYUFBQTtBQUZSO0FBSUk7RUFDSSxlQUFBO0VBQ0EsZ0JBQUE7QUFGUjtBQUlJO0VBQ0ksY0FBQTtFQUNBLFlBQUE7QUFGUjtBQUlJO0VBQ0ksa0JBQUE7RUFDQSxvQkFBQTtBQUZSO0FBR1E7RUFDSSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EscUJBQUE7RUFDQSxlQUFBO0FBRFo7QUFJSTtFQUNJLFlBQUE7QUFGUjtBQUtRO0VBQ0ksZ0JBQUE7RUFDQSxhQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7QUFIWjtBQUtRO0VBQ0ksZUFBQTtFQUNBLFlBQUE7QUFIWjtBQU9BO0VBQ0ksZUFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EsaUJBQUE7RUFDQSxpQkFBQTtBQUpKO0FBTUE7RUFDSSxlQUFBO0FBSEo7QUFLQTtFQUNJLG1DQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0FBRko7QUFJQTtFQUNJLGFBQUE7RUFDQSw0Q0FBQTtBQURKO0FBR0E7RUFDSSw0Q0FBQTtBQUFKIiwiZmlsZSI6ImNoYXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiLi4vLi4vdGhlbWUvc3R5bGVzL3ZhcmlhYmxlc1wiO1xyXG5cclxuLmNoYXR7XHJcbiAgICAuY2hhdC1hY3Rpb25ze1xyXG4gICAgICAgIHBhZGRpbmc6IDEycHg7XHJcbiAgICB9XHJcbiAgICAuYXV0aG9yLW5hbWV7XHJcbiAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICB9XHJcbiAgICAudGFsay1pdGVte1xyXG4gICAgICAgIHBhZGRpbmc6IDZweCAwO1xyXG4gICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgIH1cclxuICAgIC5tZXNzYWdle1xyXG4gICAgICAgIHdoaXRlLXNwYWNlOiB1bnNldDtcclxuICAgICAgICB0ZXh0LW92ZXJmbG93OiB1bnNldDsgICAgICAgXHJcbiAgICAgICAgc3BhbntcclxuICAgICAgICAgICAgcGFkZGluZzogNnB4IDEwcHg7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLm1lc3NhZ2UtZGF0ZXtcclxuICAgICAgICBvcGFjaXR5OiAwLjg7XHJcbiAgICB9XHJcbiAgICAuZW1wdHl7XHJcbiAgICAgICAgbWF0LWljb257XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMjIwcHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMjIwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiAyMjBweDtcclxuICAgICAgICAgICAgb3BhY2l0eTogMC40O1xyXG4gICAgICAgIH1cclxuICAgICAgICBwe1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDAuODtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuLmNoYXQtc3RhdHVzLWljb257XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBoZWlnaHQ6IDE0cHg7XHJcbiAgICB3aWR0aDogMTRweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA2cHg7XHJcbn1cclxuLmF1dGhvci1zdGF0dXN7XHJcbiAgICBmb250LXNpemU6IDEzcHg7XHJcbn1cclxuLmNoYXQtc2lkZW5hdntcclxuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIHdpZHRoOiAyMDBweDsgICBcclxufVxyXG4uY2hhdC1jb250ZW50e1xyXG4gICAgcGFkZGluZzogMTJweDtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtICgjeyR0b29sYmFyLWhlaWdodH0gKyAjeyRpbm5lci1zaWRlbmF2LWNvbnRlbnQtcGFkZGluZ30qMiArIDIzOHB4KSk7XHJcbn1cclxuLmNoYXQtc2lkZW5hdi1saXN0IHtcclxuICAgIGhlaWdodDogY2FsYygxMDB2aCAtICgjeyR0b29sYmFyLWhlaWdodH0gKyAjeyRpbm5lci1zaWRlbmF2LWNvbnRlbnQtcGFkZGluZ30qMiArIDEzNHB4KSk7XHJcbn1cclxuIl19 */\";"]}